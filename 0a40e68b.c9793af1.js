(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{108:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return f}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=p(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=t,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?a.a.createElement(f,s(s({ref:n},l),{},{components:r})):a.a.createElement(f,s({ref:n},l))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},63:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return c})),r.d(n,"default",(function(){return p}));var t=r(3),a=r(7),o=(r(0),r(108)),i={title:"Overview",id:"home"},s={unversionedId:"home",id:"home",isDocsHomePage:!1,title:"Overview",description:"Welcome to the documentation of the code analysis platform Joern! For",source:"@site/docs/home.mdx",slug:"/home",permalink:"/home",editUrl:"https://github.com/joernio/website/edit/master/docs.joern.io/docs/home.mdx",version:"current",sidebar:"docs",next:{title:"Installation",permalink:"/installation"}},c=[],l={toc:c};function p(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Welcome to the documentation of the code analysis platform Joern! For\na high-level overview, please also check out ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://joern.io"}),"https://joern.io")," ."),Object(o.b)("p",null,"Joern is a platform for robust analysis of C/C++ code. It generates\ncode property graphs, a graph representation of code for\ncross-language code analysis. Code property graphs are stored\nin a custom graph database. This allows code to be mined using search\nqueries formulated in a Scala-based domain-specific query\nlanguage. Joern is developed with the goal of providing a useful tool\nfor vulnerability discovery and research in static program analysis."),Object(o.b)("p",null,"The core features of Joern are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Fuzzy Parsing of C/C++.")," Joern employs a fuzzy parser for C/C++ based\non the concept of Island grammars. The parser enables importing\narbitrary code even if a working build environment cannot be supplied\nor parts of the code are missing.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Code Property Graphs.")," Joern creates semantic code property graphs\nfrom the fuzzy parser output and stores them in an in-memory graph\ndatabase. SCPGs are a language-agnostic intermediate representation\nof code designed for query-based code analysis.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Search Queries.")," Joern offers a stronly-typed Scala-based extensible\nquery language for code analysis based on Gremlin-Scala. This language\ncan be used to manually formulate search queries for vulnerabilities\nas well as automatically infer them using machine learning\ntechniques. ")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Extendable via CPG passes.")," Code property graphs are\nmulti-layered, offering information about code on different levels of\nabstraction. Joern comes with many default passes, but also allows\nusers to add passes to include additional information in the graph,\nand extend the query language accordingly."))))}p.isMDXComponent=!0}}]);
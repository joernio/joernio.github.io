(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),_=n(7),o=(n(0),n(111)),a={id:"help-directive",title:"Help Directive"},c={unversionedId:"cpgql/help-directive",id:"cpgql/help-directive",isDocsHomePage:!1,title:"Help Directive",description:"The Help Directive is a CPGQL Directive which returns textual descriptions of other directives.",source:"@site/docs/cpgql/help-directive.mdx",slug:"/cpgql/help-directive",permalink:"/cpgql/help-directive",editUrl:"https://github.com/joernio/website/edit/master/docs.joern.io/docs/cpgql/help-directive.mdx",version:"current",sidebar:"docs",previous:{title:"Augmentation Directives",permalink:"/cpgql/augmentation-directives"},next:{title:"Calls",permalink:"/cpgql/calls"}},i=[],l={toc:i};function p(e){var t=e.components,n=Object(_.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Help Directive is a CPGQL Directive which returns textual descriptions of other directives."),Object(o.b)("p",null,"If it is executed by itself, it shows an overview of Top-Level Commands:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'joern> help \nres0: Helper = Welcome to the interactive help system. Below you find a table of all available\ntop-level commands. To get more detailed help on a specific command, just type\n\n`help.<command>`.\n\nTry `help.importCode` to begin with.\n_______________________________________________________________________________\n command     | description                         | example                  |\n==============================================================================|\n close       | Close project by name               | close(projectName)       |\n cpg         | CPG of the active project           | cpg.method.l             |\n delete      | Close and remove project from disk  | delete(projectName)      |\n importCode  | Create new project from code        | importCode("example.jar")|\n importCpg   | Create new project from existing CPG| importCpg("cpg.bin.zip") |\n open        | Open project                        | open("projectName")      |\n project     | Currently active project            | project                  |\n reloadPolicy| reload policy                       | reloadPolicy             |\n run         | Run analyzer on active CPG          | run.securityprofile      |\n save        | Write all changes to disk           | save                     |\n undo        | undo effects of analyzer            | undo                     |\n workspace   | Access to the workspace directory   | workspace                |\n')),Object(o.b)("p",null,"If executed with a ",Object(o.b)("em",{parentName:"p"},"Top-Level Command")," ",Object(o.b)("em",{parentName:"p"},"CPGQL Component")," prefix, it describe that ",Object(o.b)("em",{parentName:"p"},"Top-Level Command"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'joern> help.save \nres0: String = """\nClose and reopen all loaded CPGs. This ensures that changes have been flushed to\ndisk.\n\nReturns list of affected projects"""\n')),Object(o.b)("p",null,"If executed as part of a traversal, it prints available steps and their description at this point. Note that this list may not be complete - use ",Object(o.b)("inlineCode",{parentName:"p"},"<tab>")," completion for the full list. "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"joern> cpg.help\nAvailable starter steps:\n______________________________________________________________________________________________________________________\n step              | description                                                                                     |\n=====================================================================================================================|\n .all              | All nodes of the graph                                                                          |\n .argument         | All arguments (actual parameters)                                                               |\n .arithmetic       | All arithmetic operations, including shorthand assignments that perform arithmetic (e.g., '+=') |\n .arrayAccess      | All array accesses                                                                              |\n .assignment       | All assignments, including shorthand assignments that perform arithmetic (e.g., '+=')           |\n...\n\n\njoern> cpg.method.help\nAvailable steps for Method:\n___________________________________________________________________________\n step                 | description                                       |\n==========================================================================|\n .address             | Address of the code (for binary code)             |\n .ast                 | All nodes of the abstract syntax tree             |\n .body                | Alias for `block`                                 |\n .break               | All breaks (`ControlStructure` nodes)             |\n .cfgLast             | Last control flow graph node                      |\n...\n")))}p.isMDXComponent=!0},111:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),_=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,_=function(e,t){if(null==e)return{};var n,r,_={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(_[n]=e[n]);return _}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(_[n]=e[n])}return _}var l=_.a.createContext({}),p=function(e){var t=_.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return _.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return _.a.createElement(_.a.Fragment,{},t)}},u=_.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,m=s["".concat(a,".").concat(u)]||s[u]||d[u]||o;return n?_.a.createElement(m,c(c({ref:t},l),{},{components:n})):_.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return _.a.createElement.apply(null,a)}return _.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);